#include <EventButton.h>
byte noteON = 144;
byte noteOFF = 128;

// Instantiate EventButton
EventButton button1(53);
EventButton button2(49);
EventButton button3(45);
EventButton button4(41);
EventButton button5(37);
EventButton button6(33);
EventButton button7(50);
EventButton button8(46);
EventButton button9(42);
EventButton button10(38);
EventButton button11(34);
EventButton button12(30);
EventButton button13(26);

// Function to handle the 'clicked' event
void onButtonClicked(EventButton& eb, int buttonNumber) {
  // Serial.print("button");
  // Serial.print(buttonNumber);
  // Serial.print(" clicked, clickCount: ");
  // Serial.println(eb.clickCount());
}

// Function to handle the 'released' event
void onButtonReleased(EventButton& eb, int buttonNumber) {
  // Serial.print("button");
  // Serial.print(buttonNumber);
  MIDImessage(noteON, 60 + buttonNumber, 120);
  // Serial.print(" released, clickCount: ");
  // Serial.println(eb.clickCount());

}

// Wrapper functions for each button to pass the button number
void onButton1Clicked(EventButton& eb) { onButtonClicked(eb, 1); }
void onButton2Clicked(EventButton& eb) { onButtonClicked(eb, 2); }
void onButton3Clicked(EventButton& eb) { onButtonClicked(eb, 3); }
void onButton4Clicked(EventButton& eb) { onButtonClicked(eb, 4); }
void onButton5Clicked(EventButton& eb) { onButtonClicked(eb, 5); }
void onButton6Clicked(EventButton& eb) { onButtonClicked(eb, 6); }
void onButton7Clicked(EventButton& eb) { onButtonClicked(eb, 7); }
void onButton8Clicked(EventButton& eb) { onButtonClicked(eb, 8); }
void onButton9Clicked(EventButton& eb) { onButtonClicked(eb, 9); }
void onButton10Clicked(EventButton& eb) { onButtonClicked(eb, 10); }
void onButton11Clicked(EventButton& eb) { onButtonClicked(eb, 11); }
void onButton12Clicked(EventButton& eb) { onButtonClicked(eb, 12); }
void onButton13Clicked(EventButton& eb) { onButtonClicked(eb, 13); }

void onButton1Released(EventButton& eb) { onButtonReleased(eb, 1); }
void onButton2Released(EventButton& eb) { onButtonReleased(eb, 2); }
void onButton3Released(EventButton& eb) { onButtonReleased(eb, 3); }
void onButton4Released(EventButton& eb) { onButtonReleased(eb, 4); }
void onButton5Released(EventButton& eb) { onButtonReleased(eb, 5); }
void onButton6Released(EventButton& eb) { onButtonReleased(eb, 6); }
void onButton7Released(EventButton& eb) { onButtonReleased(eb, 7); }
void onButton8Released(EventButton& eb) { onButtonReleased(eb, 8); }
void onButton9Released(EventButton& eb) { onButtonReleased(eb, 9); }
void onButton10Released(EventButton& eb) { onButtonReleased(eb, 10); }
void onButton11Released(EventButton& eb) { onButtonReleased(eb, 11); }
void onButton12Released(EventButton& eb) { onButtonReleased(eb, 12); }
void onButton13Released(EventButton& eb) { onButtonReleased(eb, 13); }

void setup() {
  Serial.begin(9600);
  delay(500);
  //Serial.println("EventButton Basic Example");

  // Link the events to the wrapper functions
  button1.setClickHandler(onButton1Clicked);
  button1.setReleasedHandler(onButton1Released);
  button2.setClickHandler(onButton2Clicked);
  button2.setReleasedHandler(onButton2Released);
  button3.setClickHandler(onButton3Clicked);
  button3.setReleasedHandler(onButton3Released); 
  button4.setClickHandler(onButton4Clicked);
  button4.setReleasedHandler(onButton4Released);
  button5.setClickHandler(onButton5Clicked);
  button5.setReleasedHandler(onButton5Released);
  button6.setClickHandler(onButton6Clicked);
  button6.setReleasedHandler(onButton6Released);
  button7.setClickHandler(onButton7Clicked);
  button7.setReleasedHandler(onButton7Released);
  button8.setClickHandler(onButton8Clicked);
  button8.setReleasedHandler(onButton8Released);
  button9.setClickHandler(onButton9Clicked);
  button9.setReleasedHandler(onButton9Released);
  button10.setClickHandler(onButton10Clicked);
  button10.setReleasedHandler(onButton10Released);
  button11.setClickHandler(onButton11Clicked);
  button11.setReleasedHandler(onButton11Released);
  button12.setClickHandler(onButton12Clicked);
  button12.setReleasedHandler(onButton12Released);
  button13.setClickHandler(onButton13Clicked);
  button13.setReleasedHandler(onButton13Released);
}

void loop() {
  // Update the state of each button
  button1.update();
  button2.update();
  button3.update();
  button4.update();
  button5.update();
  button6.update();
  button7.update();
  button8.update();
  button9.update();
  button10.update();
  button11.update();
  button12.update();
  button13.update();

  // Print the state of each button
  // Serial.print("b1: ");
  // Serial.print(button1.isPressed());
  // Serial.print(", b2: ");
  // Serial.print(button2.isPressed());
  // Serial.print(", b3: ");
  // Serial.print(button3.isPressed());
  // Serial.print(", b4: ");
  // Serial.print(button4.isPressed());
  // Serial.print(", b5: ");
  // Serial.print(button5.isPressed());
  // Serial.print(", b6: ");
  // Serial.print(button6.isPressed());
  // Serial.print(", b7: ");
  // Serial.print(button7.isPressed());
  // Serial.print(", b8: ");
  // Serial.print(button8.isPressed());
  // Serial.print(", b9: ");
  // Serial.print(button9.isPressed());
  // Serial.print(", b10: ");
  // Serial.print(button10.isPressed());
  // Serial.print(", b11: ");
  // Serial.print(button11.isPressed());
  // Serial.print(", b12: ");
  // Serial.print(button12.isPressed());
  // Serial.print(", b13: ");
  // Serial.println(button13.isPressed());

  // delay(100); // Add a delay to make the output more readable
}

//send MIDI message
void MIDImessage(byte command, byte data1, byte data2) {
  Serial.write(command);
  Serial.write(data1);
  Serial.write(data2);
}
